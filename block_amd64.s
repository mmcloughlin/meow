// Code generated by go run make_block.go. DO NOT EDIT.

#include "textflag.h"

TEXT Â·block(SB),0,$0-0
#define STATE_PTR DI
	MOVQ     state_ptr+0(FP), STATE_PTR
#define SRC_PTR SI
	MOVQ     src_ptr+8(FP), SRC_PTR
#define SRC_LEN AX
	MOVQ     src_len+0(FP), SRC_LEN

	// Load state.
	MOVOU    0(STATE_PTR), X0
	MOVOU    16(STATE_PTR), X1
	MOVOU    32(STATE_PTR), X2
	MOVOU    48(STATE_PTR), X3
	MOVOU    64(STATE_PTR), X4
	MOVOU    80(STATE_PTR), X5
	MOVOU    96(STATE_PTR), X6
	MOVOU    112(STATE_PTR), X7
	MOVOU    128(STATE_PTR), X8
	MOVOU    144(STATE_PTR), X9
	MOVOU    160(STATE_PTR), X10
	MOVOU    176(STATE_PTR), X11
	MOVOU    192(STATE_PTR), X12
	MOVOU    208(STATE_PTR), X13
	MOVOU    224(STATE_PTR), X14
	MOVOU    240(STATE_PTR), X15

loop:
	CMPQ     SRC_LEN, $256
	JL       done

	// Hash block.
	AESDEC   0(SRC_PTR), X0
	AESDEC   16(SRC_PTR), X1
	AESDEC   32(SRC_PTR), X2
	AESDEC   48(SRC_PTR), X3
	AESDEC   64(SRC_PTR), X4
	AESDEC   80(SRC_PTR), X5
	AESDEC   96(SRC_PTR), X6
	AESDEC   112(SRC_PTR), X7
	AESDEC   128(SRC_PTR), X8
	AESDEC   144(SRC_PTR), X9
	AESDEC   160(SRC_PTR), X10
	AESDEC   176(SRC_PTR), X11
	AESDEC   192(SRC_PTR), X12
	AESDEC   208(SRC_PTR), X13
	AESDEC   224(SRC_PTR), X14
	AESDEC   240(SRC_PTR), X15

	// Update source pointer.
	ADDQ     $256, SRC_PTR
	SUBQ     $256, SRC_LEN
	JMP      loop

done:

	// Store state.
	MOVOU    X0, 0(STATE_PTR)
	MOVOU    X1, 16(STATE_PTR)
	MOVOU    X2, 32(STATE_PTR)
	MOVOU    X3, 48(STATE_PTR)
	MOVOU    X4, 64(STATE_PTR)
	MOVOU    X5, 80(STATE_PTR)
	MOVOU    X6, 96(STATE_PTR)
	MOVOU    X7, 112(STATE_PTR)
	MOVOU    X8, 128(STATE_PTR)
	MOVOU    X9, 144(STATE_PTR)
	MOVOU    X10, 160(STATE_PTR)
	MOVOU    X11, 176(STATE_PTR)
	MOVOU    X12, 192(STATE_PTR)
	MOVOU    X13, 208(STATE_PTR)
	MOVOU    X14, 224(STATE_PTR)
	MOVOU    X15, 240(STATE_PTR)
	RET      
